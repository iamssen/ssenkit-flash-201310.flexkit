<?xml version="1.0" encoding="utf-8"?>
<skins:SimpleScrollBarThumbSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
								xmlns:skins="ssen.flexkit.components.scroll.skins.*">
	<fx:Metadata>
		<![CDATA[ 
			[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			override protected function stateChanged(oldState:String, newState:String, recursive:Boolean):void {
				super.stateChanged(oldState, newState, recursive);

				if (oldState === newState) {
					return;
				}

				switch (currentState) {
					case "over":
						thumbColor.color=thumbOverColor;
						thumbColor.alpha=thumbOverAlpha;
						break;
					case "down":
						thumbColor.color=thumbDownColor;
						thumbColor.alpha=thumbDownAlpha;
						break;
					default:
						thumbColor.color=thumbNormalColor;
						thumbColor.alpha=thumbNormalAlpha;
						break;
				}
			}

			override public function styleChanged(styleProp:String):void {
				super.styleChanged(styleProp);

				switch (styleProp) {
					case "thumbInsideMargin":
						thumb.left=getStyle(styleProp);
						break;
					case "thumbOutsideMargin":
						thumb.right=getStyle(styleProp);
						break;
					case "thumbStartMargin":
						thumb.top=getStyle(styleProp);
						break;
					case "thumbEndMargin":
						thumb.bottom=getStyle(styleProp);
						break;
				}
			}
		]]>
	</fx:Script>

	<skins:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
	</skins:states>

	<!-- hit -->
	<s:Rect left="0" top="0" right="0" bottom="0" minWidth="14" minHeight="14">
		<s:fill>
			<s:SolidColor alpha="0"/>
		</s:fill>
	</s:Rect>

	<!--
	inside margin	=>	left
	outside margin	=>	right
	start margin	=>	top
	end margin		=>	bottom
	-->
	<s:Rect id="thumb" left="4" right="4" top="2" bottom="2">
		<s:fill>
			<s:SolidColor id="thumbColor"/>
		</s:fill>
	</s:Rect>
</skins:SimpleScrollBarThumbSkin>
